INSTALACIÓN--
npm mongoose
npm express
nom dotenv
npm cors
npm react-hot-toast(Add beautiful notifications to your React app with react-hot-toast)
npm bcrypt
npm i jsonwebtoken
npm i cookie-parser/// cookie parser middleware function using the given secret and options

Título del Proyecto: CarWash Shop -
 Servicio de lavado de coche y tambien con suscripción.

Descripción: CarWash Shop es una aplicación en la cual ofrece servicios de lavados de coches bajo demanda y con suscripción mensual. La app deja a los usuarios solicitar lavados de coches desde cualquier lugar a domicilio o  lavadero de coches. Además los usuarios puedes optar por una suscripción mensual que ofrece beneficios como lavados ilimitados, descuentos en servicios adicionales o prioridad en reservas.

Wireframe Mid-Fi:

Página de Inicio: 
-Logotipo de la aplicación
-Menu Nav (Inicio,Servicios,Suscripciones,Contacto, Login/Registro)
-Sección de info sobre servicios

Registro/Login
-Formulario a completar para la entrada con Email y contraseña.
-Botón para envío para iniciar o registrar.

Perfil Usuario:
-Información persona (nombre, email, dirección)
-Historial de lavados.
-Estado de la suscripción y opción de actualizar o cancelar.

Seleccionar Servicios
-Lista de tipos de lavados con descripcion y precios.
-Opción para programar lavados( date & time)


PAGOS-----( a al espera de antonio)

Historial 
-Lista de lavados anteriores y que realizo
-Comentarios




Diseño de API:
Endpoint:
-----services
Post/register ----Registro de nuevos usuarios
Post/login    ----Autenticación de usuarios
Get/Profile   ----Obtener detalles del perfil del usuario
---------services
Get/Service/all   ---Obtener lista de servicios de lavado disponibles
POST/Service/create-- crear la lista
POST/Service/:id-- Borrar lista 
--------reviews
Post/Reviews/:id   -----Crear comentario para lavado
Get/Reviews/wash/:wash_id----Obtener todos los comentarios asociados a un lavado específico
Put/Reviews/:id ----  Actualizar un comentario existente por su ID
Delete/Reviews/:id --  Eliminar un comentario existente por su ID


Post/pagar -----  Procesar el pago de un servicio (Preguntar antonio)(npm stripe??)


Diseño de Base de Datos: 
MongoDB

Usuarios

const userSchema = new mongoose.Schema({
  nombre: { type: String, required: true },
  correo: { type: String, required: true, unique: true },
  contraseña: { type: String, required: true },
  suscripcion: { type: Boolean, default: false }
});


Servicios 
const serviceSchema = new mongoose.Schema({
  nombre: { type: String, required: true },
  descripcion: { type: String, required: true },
  precio: { type: Number, required: true }
});


Lavados
const LavadoSchema = new mongoose.Schema({
  user_id: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
  service_id: { type: mongoose.Schema.Types.ObjectId, ref: 'Service', required: true },
  fecha: { type: Date, default: Date.now },
  ubicacion: { type: String, required: true },
  estado: { type: String, enum: ['pendiente', 'completado', 'cancelado'], default: 'pendiente' }
});

Reviews
const reviewSchema = new mongoose.Schema({
  user_id: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
  wash_id: { type: mongoose.Schema.Types.ObjectId, ref: 'Wash', required: true },
  comentario: { type: String, required: true },
  rating: { type: Number, required: true, min: 1, max: 5 },
  fecha: { type: Date, default: Date.now }
});